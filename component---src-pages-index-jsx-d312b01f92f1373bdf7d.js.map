{"version":3,"sources":["webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/memoize.js","webpack:///./node_modules/lodash/_castPath.js","webpack:///./node_modules/lodash/_toKey.js","webpack:///./node_modules/lodash/_isKey.js","webpack:///./src/components/section-about/index.jsx","webpack:///./src/components/section-blog/index.jsx","webpack:///./src/components/section-experience/index.jsx","webpack:///./src/components/section-projects/index.jsx","webpack:///./src/components/section-skills/index.jsx","webpack:///./src/components/section-footer/index.jsx","webpack:///./src/pages/index.jsx","webpack:///./node_modules/lodash/_stringToPath.js","webpack:///./node_modules/lodash/_memoizeCapped.js","webpack:///./src/components/section/index.jsx","webpack:///./node_modules/lodash/_baseGet.js","webpack:///./node_modules/lodash/toString.js","webpack:///./src/components/header/index.jsx","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./src/images/profile.jpg","webpack:///./src/components/summary-item/index.jsx","webpack:///./node_modules/lodash/get.js","webpack:///./node_modules/lodash/_baseToString.js"],"names":["baseGetTag","isObjectLike","module","exports","value","MapCache","memoize","func","resolver","TypeError","memoized","args","arguments","key","apply","this","cache","has","get","result","set","Cache","isArray","isKey","stringToPath","toString","object","isSymbol","reIsDeepProp","reIsPlainProp","type","test","Object","SectionAbout","about","title","className","SectionBlog","posts","map","post","node","fields","slug","name","frontmatter","description","link","internal","length","to","SectionExperience","experience","item","SectionProjects","projects","project","SectionSkills","skills","skill","SectionFooter","href","pageQuery","Index","data","allMarkdownRemark","edges","noBlog","metadata","site","siteMetadata","memoizeCapped","rePropName","reEscapeChar","string","charCodeAt","push","replace","match","number","quote","subString","size","clear","classes","Section","children","castPath","toKey","path","index","undefined","baseToString","wrapper","imageWrapper","image","contentWrapper","list","Header","twitter","github","linkedin","src","profileImg","alt","linkName","array","iteratee","Array","SummaryItem","linkContent","listItems","from","baseGet","defaultValue","Symbol","arrayMap","symbolProto","prototype","symbolToString","call"],"mappings":"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","file":"component---src-pages-index-jsx-d312b01f92f1373bdf7d.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","import React from 'react';\n\nimport Section from '../section';\n\nconst SectionAbout = ({ about }) => {\n  return (\n    <Section title=\"About Me\">\n      <div className=\"mb-6\">\n        <p>{about}</p>\n      </div>\n    </Section>\n  );\n};\n\nexport default SectionAbout;\n","import { Link } from 'gatsby';\nimport React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst SectionBlog = ({ posts }) => {\n  return (\n    <Section title=\"Latest Posts\">\n      {posts.map((post) => (\n        <SummaryItem\n          key={post.node.fields.slug}\n          name={post.node.frontmatter.title}\n          description={post.node.frontmatter.description}\n          link={post.node.fields.slug}\n          internal\n        />\n      ))}\n      {posts.length >= 5 && (\n        <Link className=\"text-gray-500 text-sm hover:text-black\" to=\"/blog\">\n          View all posts &rarr;\n        </Link>\n      )}\n    </Section>\n  );\n};\n\nexport default SectionBlog;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst SectionExperience = ({ experience }) => {\n  if (!experience.length) return null;\n\n  return (\n    <Section title=\"Experience\">\n      {experience.map((item) => (\n        <SummaryItem\n          key={item.name}\n          name={item.name}\n          description={item.description}\n          link={item.link}\n          title=\"Experience\"\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default SectionExperience;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst SectionProjects = ({ projects }) => {\n  if (!projects.length) return null;\n\n  return (\n    <Section title=\"Projects\">\n      {projects.map((project) => (\n        <SummaryItem\n          key={project.name}\n          name={project.name}\n          description={project.description}\n          link={project.link}\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default SectionProjects;\n","import React from 'react';\n\nimport Section from '../section';\nimport SummaryItem from '../summary-item';\n\nconst SectionSkills = ({ skills }) => {\n  return (\n    <Section title=\"Skills\">\n      {skills.map((skill) => (\n        <SummaryItem\n          key={skill.name}\n          name={skill.name}\n          description={skill.description}\n        />\n      ))}\n    </Section>\n  );\n};\n\nexport default SectionSkills;\n","import React from 'react';\nimport '../../css/index.css'\n\nconst SectionFooter = () => {\n    return (\n      <div>\n        <hr /><br />\n      <a href=\"/old\" className=\"footer\">For Precious, With Patience</a>\n      </div>\n    );\n}\n\nexport default SectionFooter;\n","import { graphql } from 'gatsby';\nimport get from 'lodash/get';\nimport React from 'react';\n\nimport Header from '../components/header';\nimport Layout from '../components/layout';\nimport SectionAbout from '../components/section-about';\nimport SectionBlog from '../components/section-blog';\nimport SectionExperience from '../components/section-experience';\nimport SectionProjects from '../components/section-projects';\nimport SectionSkills from '../components/section-skills';\nimport SEO from '../components/seo';\nimport SectionFooter from '../components/section-footer';\n\nconst Index = ({ data }) => {\n  const about = get(data, 'site.siteMetadata.about', false);\n  const projects = get(data, 'site.siteMetadata.projects', false);\n  const posts = data.allMarkdownRemark.edges;\n  const experience = get(data, 'site.siteMetadata.experience', false);\n  const skills = get(data, 'site.siteMetadata.skills', false);\n  const noBlog = !posts || !posts.length;\n\n  return (\n    <Layout>\n      <SEO />\n      <Header metadata={data.site.siteMetadata} noBlog={noBlog} />\n      {about && <SectionAbout about={about} />}\n      {projects && projects.length && <SectionProjects projects={projects} />}\n      {!noBlog && <SectionBlog posts={posts} />}\n      {experience && experience.length && (\n        <SectionExperience experience={experience} />\n      )}\n      {skills && skills.length && <SectionSkills skills={skills} />}\n    <SectionFooter />\n    </Layout>\n  );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        name\n        title\n        description\n        about\n        author\n        github\n        linkedin\n        projects {\n          name\n          description\n          link\n        }\n        experience {\n          name\n          description\n          link\n        }\n        skills {\n          name\n          description\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 5\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","import React from 'react';\n\nconst classes = {\n  wrapper: 'block pt-12 md:flex',\n  title: 'pb-6 md:w-full md:max-w-150 md:p-0',\n  heading:\n    'font-xs font-bold tracking-widest text-sm text-gray-600 leading-normal uppercase',\n  content: 'font-body flex-none text-lg text-gray-600 font-light md:flex-1 md:pl-20',\n};\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.title}>\n        <h2 className={classes.heading}>{title}</h2>\n      </div>\n      <div className={classes.content}>{children}</div>\n    </div>\n  );\n};\n\nexport default Section;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","import { Link } from 'gatsby';\nimport get from 'lodash/get';\nimport React from 'react';\n\nimport {\n  IoLogoGithub as GitHubIcon,\n  IoLogoLinkedin as LinkedInIcon,\n  ImBlog as BlogIcon,\n} from '../../../node_modules/react-icons/all';\n\n\nimport profileImg from '../../images/profile.jpg';\n\nconst classes = {\n  wrapper: 'block mb-6 md:flex',\n  imageWrapper: 'w-full max-w-150',\n  image: 'rounded-full transform transition-all duration-150 hover:scale-105',\n  contentWrapper: 'flex-none pt-6 md:pt-1 md:flex-1 md:pl-20',\n  name: 'text-5xl text-gray-900 font-bold leading-tight hover:text-black',\n  description: 'text-gray-600',\n  list: 'mt-6 uppercase tracking-wider',\n  item: 'inline list-none pr-4',\n  link:\n    'inline-block py-2 font-semibold text-xs text-gray-600 hover:text-black',\n};\n\nconst Header = ({ metadata = {}, noBlog = false }) => {\n  const twitter = get(metadata, 'author', false);\n  const github = get(metadata, 'github', false);\n  const linkedin = get(metadata, 'linkedin', false);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.imageWrapper}>\n        <Link to=\"/\">\n          <img className={classes.image} src={profileImg} alt={metadata.name} />\n        </Link>\n      </div>\n      <div className={classes.contentWrapper}>\n        <h1 className={classes.name}>\n          <Link to=\"/\">{metadata.name}</Link>\n        </h1>\n        <p className={classes.description}>{metadata.description}</p>\n        <ul className={classes.list}>\n          {twitter && (\n            <li className={classes.item}>\n              <a\n                className={classes.link}\n                href={`https://twitter.com/${twitter}`}\n              >\n                Twitter\n              </a>\n            </li>\n          )}\n          {github && (\n            <li className={classes.item}>\n              <a className={classes.link} href={github}>\n                <GitHubIcon /> <span className={classes.linkName}>GitHub</span>\n              </a>\n            </li>\n          )}\n          {linkedin && (\n            <li className={classes.item}>\n              <a className={classes.link} href={linkedin}>\n                <LinkedInIcon /> <span className={classes.linkName}>LinkedIn</span>\n              </a>\n            </li>\n          )}\n          {!noBlog && (\n            <li className={classes.item}>\n              <Link className={classes.link} to=\"/blog\">\n            <BlogIcon/> Blog\n              </Link>\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","module.exports = __webpack_public_path__ + \"static/profile-c8476b899ce90fe8baf464f04b61b71e.jpg\";","import { Link } from 'gatsby';\nimport React from 'react';\n\nconst classes = {\n  wrapper: 'mb-6',\n  name: 'font-semibold text-gray-900 pb-1',\n  description: 'text-md text-gray-600 font-light',\n};\n\nconst SummaryItem = ({ name, description, link = false, internal = false , title }) => {\n  let linkContent, listItems = null;\n  if (internal) {\n    linkContent = <Link to={link}>{name}</Link>;\n  } else {\n    linkContent = <a href={link}>{name}</a>;\n  }\n\n  const moreThanOnePoint = description.length > 1 && typeof description === \"object\";\n\n  if (moreThanOnePoint) {\n      description = Array.from(description);\n    listItems = description.map((item, index) => <p key={ index } className={classes.description}>{item}</p>\n    );\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <h3\n        className={`${classes.name} ${\n          link ? 'hover:underline hover:text-black' : ''\n        }`}\n      >\n        {link ? linkContent : name}\n      </h3>\n    {listItems ? listItems : <p className={classes.description}>{description}</p>}\n    </div>\n  );\n};\n\nexport default SummaryItem;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n"],"sourceRoot":""}